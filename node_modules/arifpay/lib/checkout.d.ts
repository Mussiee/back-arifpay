import { AxiosInstance } from 'axios';
declare class Checkout {
    _httpClient: AxiosInstance;
    constructor(_httpClient: AxiosInstance);
    create(arifpayCheckoutRequest: ArifpayCheckoutRequest, option?: ArifpayOptions): Promise<ArifpayCheckoutResponse>;
    fetch(sessionID: string, option?: ArifpayOptions): Promise<ArifpayCheckoutSession>;
    cancel(sessionID: string, option?: ArifpayOptions): Promise<ArifpayCheckoutSession>;
    __handleException(error: any): void;
}
export interface ArifpayCheckoutSession extends ArifpayCheckoutRequest {
    id: number;
    transaction: ArifpayTranscation;
    totalAmount: number;
    test: boolean;
    updatedAt: string;
    createdAt: string;
    uuid: string;
}
export interface ArifpayTranscation {
    id: number;
    transactionId: string;
    transactionStatus: string;
    paymentType: string;
    updatedAt: string;
    createdAt: string;
}
export interface ArifpayCheckoutResponse {
    sessionId: string;
    paymentUrl: string;
    cancelUrl: string;
    totalAmount: number;
}
export interface ArifpayCheckoutRequest {
    cancelUrl: string;
    nonce: string;
    errorUrl: string;
    notifyUrl: string;
    successUrl: string;
    paymentMethods: string[];
    expireDate: string;
    items: ArifpayCheckoutItem[];
    beneficiaries: ArifpayBeneficary[];
}
export interface ArifpayCheckoutItem {
    name: string;
    quantity: number;
    price: number;
    description?: string;
    image?: string;
}
export interface ArifpayOptions {
    sandbox: boolean;
}
export interface ArifpayBeneficary {
    id?: number;
    accountNumber: string;
    bank: any;
    amount: number;
}
export default Checkout;
