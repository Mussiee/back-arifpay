"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var axios_1 = require("axios");
var APIBadRequestException_1 = require("./exceptions/APIBadRequestException");
var APIUnauthorized_1 = require("./exceptions/APIUnauthorized");
var arifpayexception_1 = require("./exceptions/arifpayexception");
var arifpaynetworkexception_1 = require("./exceptions/arifpaynetworkexception");
var Checkout = /** @class */ (function () {
    function Checkout(_httpClient) {
        this._httpClient = _httpClient;
    }
    Checkout.prototype.create = function (arifpayCheckoutRequest, option) {
        if (option === void 0) { option = { sandbox: false }; }
        return __awaiter(this, void 0, void 0, function () {
            var basePath, response, arifAPIResponse, error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        basePath = option.sandbox ? '/sandbox/' : '/';
                        return [4 /*yield*/, this._httpClient.post("".concat(basePath, "checkout/session"), arifpayCheckoutRequest)];
                    case 1:
                        response = _a.sent();
                        arifAPIResponse = response.data;
                        return [2 /*return*/, arifAPIResponse.data];
                    case 2:
                        error_1 = _a.sent();
                        this.__handleException(error_1);
                        throw error_1;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    Checkout.prototype.fetch = function (sessionID, option) {
        if (option === void 0) { option = { sandbox: false }; }
        return __awaiter(this, void 0, void 0, function () {
            var basePath, response, arifAPIResponse, error_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        basePath = option.sandbox ? '/sandbox/' : '/';
                        return [4 /*yield*/, this._httpClient.get("".concat(basePath, "checkout/session/").concat(sessionID))];
                    case 1:
                        response = _a.sent();
                        arifAPIResponse = response.data;
                        return [2 /*return*/, arifAPIResponse.data];
                    case 2:
                        error_2 = _a.sent();
                        this.__handleException(error_2);
                        throw error_2;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    Checkout.prototype.cancel = function (sessionID, option) {
        if (option === void 0) { option = { sandbox: false }; }
        return __awaiter(this, void 0, void 0, function () {
            var basePath, response, arifAPIResponse, error_3;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        basePath = option.sandbox ? '/sandbox/' : '/';
                        return [4 /*yield*/, this._httpClient.post("".concat(basePath, "checkout/session/cancel/").concat(sessionID))];
                    case 1:
                        response = _a.sent();
                        arifAPIResponse = response.data;
                        return [2 /*return*/, arifAPIResponse.data];
                    case 2:
                        error_3 = _a.sent();
                        this.__handleException(error_3);
                        throw error_3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    Checkout.prototype.__handleException = function (error) {
        var _a, _b, _c, _d;
        if (axios_1.default.isAxiosError(error)) {
            if (error.response) {
                if (((_a = error.response) === null || _a === void 0 ? void 0 : _a.status) === 401)
                    throw new APIUnauthorized_1.default('Invalid authentication credentials');
                if (((_b = error.response) === null || _b === void 0 ? void 0 : _b.status) === 400) {
                    var arifAPIResponse = (_c = error.response) === null || _c === void 0 ? void 0 : _c.data;
                    throw new APIBadRequestException_1.default(arifAPIResponse.msg, arifAPIResponse.data);
                }
                throw new arifpayexception_1.default(((_d = error.response) === null || _d === void 0 ? void 0 : _d.data).msg);
            }
            else
                throw new arifpaynetworkexception_1.default(error.message);
        }
    };
    return Checkout;
}());
exports.default = Checkout;
